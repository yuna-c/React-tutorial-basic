import React, { useState, useEffect } from 'react';
import axios from 'axios';

function Users() {
    const [users, setUsers] = useState(null); // 결과물, 기본값 null
    const [loading, setLoading] = useState(false); // API가 요청중인지 아닌지를 알려주는 값
    const [error, setError] = useState(null);

    // 버튼 눌러서 API 요청 다시 하는 방법
    const fetchUsers = async () => {
        try { //값 초기화
            setUsers(null);
            setError(null);
            setLoading(true); //로딩이 시작됬다
            const response = await axios.get('https://jsonplaceholder.typicode.com/users/');
            // 응답의 결과값 response.data 조회
            setUsers(response.data);
        } catch (e) {
            console.log(e.response.status);
            setError(e);
        }
        //로딩이 끝났다는 걸 알림
        setLoading(false);
    };

    // 컴포넌트가 가장 처음 랜더링 될 때, axios를 사용하여 API를 요청
    useEffect(() => {
        fetchUsers();
    }, []);

    if (loading) return <div>로딩중...</div>
    if (error) return <div>에러가 발생했습니다</div>
    if (!users) return null; // users에 배열이 유효하지 않은 값 이라면 아무것도 안보여지게 된다

    // users에 제대로 된 배열이 담겨있는 상태

    return (
        <>
            <ul>
                {users.map(user => <li key={user.id}>
                    {user.username} ({user.name})
                </li>)}
            </ul>

            <button onClick={fetchUsers}>다시 불러오기</button>
        </>
    )
}

export default Users;
